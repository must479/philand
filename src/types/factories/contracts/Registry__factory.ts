/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Registry, RegistryInterface } from "../../contracts/Registry";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "AllreadyClaimedPhiland",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Registry.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "InvalidCoupon",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "NotAdminCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NotReadyPhiland",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Hello",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "phiMapAddress",
        type: "address",
      },
    ],
    name: "LogChangePhilandAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogChangePhilandOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogCreatePhiland",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    name: "SetAdminSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "basenode",
        type: "bytes32",
      },
    ],
    name: "SetBaseNode",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "phiMapAddress",
        type: "address",
      },
    ],
    name: "changePhiMapAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Registry.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "changePhilandOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct Registry.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "createPhiland",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPhiMapAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "initMap",
        type: "address",
      },
      {
        internalType: "address",
        name: "initAdminSigner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "map",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "ownerLists",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifierAdderss",
        type: "address",
      },
    ],
    name: "setAdminSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff1615808015620000335750600054600160ff909116105b8062000063575062000050306200013d60201b62000c111760201c565b15801562000063575060005460ff166001145b620000cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805460ff191660011790558015620000ef576000805461ff0019166101001790555b801562000136576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b506200014c565b6001600160a01b03163b151590565b61159c806200015c6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063a217fddf116100b2578063c758118411610081578063cffd0d0f11610066578063cffd0d0f146102c0578063d547741f146102d3578063e834a834146102e657600080fd5b8063c75811841461029a578063cbe9ae34146102ad57600080fd5b8063a217fddf1461025b578063a38a50fc14610263578063a4cfd20a14610276578063c0c53b8b1461028757600080fd5b806336568abe116100ee57806336568abe146101a157806346a316d9146101b45780636a5ceb2f1461021157806391d148541461022257600080fd5b806301ffc9a714610120578063183bbe8014610148578063248a9ca31461015d5780632f2ff15d1461018e575b600080fd5b61013361012e3660046110fa565b6102ef565b60405190151581526020015b60405180910390f35b61015b610156366004611140565b610326565b005b61018061016b36600461115b565b60009081526065602052604090206001015490565b60405190815260200161013f565b61015b61019c366004611174565b6103d9565b61015b6101af366004611174565b610403565b6101f96101c2366004611243565b609a60209081526000928352604090922081518083018401805192815290840192909301919091209152546001600160a01b031681565b6040516001600160a01b03909116815260200161013f565b6097546001600160a01b03166101f9565b610133610230366004611174565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610180600081565b61015b610271366004611291565b61048f565b6098546001600160a01b03166101f9565b61015b610295366004611337565b6106c0565b6097546101f9906001600160a01b031681565b61015b6102bb366004611291565b6108e2565b61015b6102ce366004611140565b610afa565b61015b6102e1366004611174565b610bec565b61018060995481565b60006001600160e01b03198216637965db0b60e01b148061032057506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff1661037c57604051631a35241360e31b81523360048201526024015b60405180910390fd5b6001600160a01b03811661038f57600080fd5b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe962aa622975becd620ca7b16db507022a2b43cc5657b30c4b907a7ecfb8042590600090a250565b6000828152606560205260409020600101546103f481610c20565b6103fe8383610c2d565b505050565b6001600160a01b03811633146104815760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610373565b61048b8282610ccf565b5050565b818160008233306040516020016104a8939291906113d2565b6040516020818303038152906040528051906020012090506104ca8183610d52565b610515576104d88183610d52565b6105155760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b7bab837b760911b6044820152606401610373565b6097546001600160a01b03166000908152609a6020526040808220905161053d908890611405565b908152604051908190036020019020546001600160a01b0316146105bc576097546001600160a01b03166000908152609a6020526040908190209051339190610587908890611405565b90815260405190819003602001812054632c064ce160e01b825261037392916001600160a01b03909116908890600401611421565b6099805460010190556097546001600160a01b03166000908152609a60205260409081902090513391906105f1908890611405565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790556097546384b47b0f60e01b82529091169081906384b47b0f906106459089903390600401611456565b600060405180830381600087803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b50505050336001600160a01b03167f55da0857a5df23f43c9be98b1707bc6a2d42d5ec8ee76089999c188f8afcf861876040516106b09190611481565b60405180910390a2505050505050565b600054610100900460ff16158080156106e05750600054600160ff909116105b806106fa5750303b1580156106fa575060005460ff166001145b61076c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610373565b6000805460ff19166001179055801561078f576000805461ff0019166101001790555b610797610e41565b6107a2600085610ec0565b6001600160a01b0383166107ed5760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b6044820152606401610373565b6001600160a01b0382166108385760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b6044820152606401610373565b609780546001600160a01b038086166001600160a01b0319928316179092556098805492851692909116919091179055600060998190556040517fbcdfe0d5b27dd186282e187525415c57ea3077c34efb39148111e4d342e7ab0e9190a180156108dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b818160008233306040516020016108fb939291906113d2565b60405160208183030381529060405280519060200120905061091d8183610d52565b6109685761092b8183610d52565b6109685760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b7bab837b760911b6044820152606401610373565b6097546001600160a01b03166000908152609a60205260408082209051610990908890611405565b908152604051908190036020019020546001600160a01b031603610a0f576097546001600160a01b03166000908152609a60205260409081902090513391906109da908890611405565b908152604051908190036020018120546325c38edf60e11b825261037392916001600160a01b03909116908890600401611421565b6097546001600160a01b03166000908152609a6020526040908190209051339190610a3b908890611405565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790556097546348d740a560e01b82529091169081906348d740a590610a8f9089903390600401611456565b600060405180830381600087803b158015610aa957600080fd5b505af1158015610abd573d6000803e3d6000fd5b50505050336001600160a01b03167fbb24c9ef8c34dc16b2f4623e6e8b415fe38c43a9a6b435cd3330e92146f1a51b876040516106b09190611481565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff16610b4b57604051631a35241360e31b8152336004820152602401610373565b6001600160a01b038116610b965760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b6044820152606401610373565b609780546001600160a01b0319166001600160a01b03831690811790915560405190815233907fdeb3fa3d21df17f711c7e426784f572b181d40b774cd30fb9f17f84863da6c829060200160405180910390a250565b600082815260656020526040902060010154610c0781610c20565b6103fe8383610ccf565b6001600160a01b03163b151590565b610c2a8133610eca565b50565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff1661048b5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610c8b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff161561048b5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008060018484604001518560000151866020015160405160008152602001604052604051610d9d949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610dbf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e29576040805163d1c36d9d60e01b81523360048201526001600160a01b03831660248201526044810186905284516064820152602085015160848201529084015160ff1660a482015260c401610373565b6098546001600160a01b039081169116149392505050565b600054610100900460ff16610ebe5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610373565b565b61048b8282610c2d565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff1661048b57610f08816001600160a01b03166014610f4a565b610f13836020610f4a565b604051602001610f24929190611494565b60408051601f198184030181529082905262461bcd60e51b825261037391600401611481565b60606000610f5983600261152b565b610f6490600261154a565b67ffffffffffffffff811115610f7c57610f7c6111a0565b6040519080825280601f01601f191660200182016040528015610fa6576020820181803683370190505b509050600360fc1b81600081518110610fc157610fc1611562565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610ff057610ff0611562565b60200101906001600160f81b031916908160001a905350600061101484600261152b565b61101f90600161154a565b90505b60018111156110a4577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061106057611060611562565b1a60f81b82828151811061107657611076611562565b60200101906001600160f81b031916908160001a90535060049490941c9361109d81611578565b9050611022565b5083156110f35760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610373565b9392505050565b60006020828403121561110c57600080fd5b81356001600160e01b0319811681146110f357600080fd5b80356001600160a01b038116811461113b57600080fd5b919050565b60006020828403121561115257600080fd5b6110f382611124565b60006020828403121561116d57600080fd5b5035919050565b6000806040838503121561118757600080fd5b8235915061119760208401611124565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126111c757600080fd5b813567ffffffffffffffff808211156111e2576111e26111a0565b604051601f8301601f19908116603f0116810190828211818310171561120a5761120a6111a0565b8160405283815286602085880101111561122357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561125657600080fd5b61125f83611124565b9150602083013567ffffffffffffffff81111561127b57600080fd5b611287858286016111b6565b9150509250929050565b60008082840360808112156112a557600080fd5b833567ffffffffffffffff808211156112bd57600080fd5b6112c9878388016111b6565b94506060601f19840112156112dd57600080fd5b604051925060608301915082821081831117156112fc576112fc6111a0565b5080604052506020840135815260408401356020820152606084013560ff8116811461132757600080fd5b6040820152919491935090915050565b60008060006060848603121561134c57600080fd5b61135584611124565b925061136360208501611124565b915061137160408501611124565b90509250925092565b60005b8381101561139557818101518382015260200161137d565b838111156108dc5750506000910152565b600081518084526113be81602086016020860161137a565b601f01601f19169290920160200192915050565b6060815260006113e560608301866113a6565b6001600160a01b0394851660208401529290931660409091015292915050565b6000825161141781846020870161137a565b9190910192915050565b60006001600160a01b0380861683528085166020840152506060604083015261144d60608301846113a6565b95945050505050565b60408152600061146960408301856113a6565b90506001600160a01b03831660208301529392505050565b6020815260006110f360208301846113a6565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516114cc81601785016020880161137a565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161150981602884016020880161137a565b01602801949350505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561154557611545611515565b500290565b6000821982111561155d5761155d611515565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161158757611587611515565b50600019019056fea164736f6c634300080d000a";

type RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registry__factory extends ContractFactory {
  constructor(...args: RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registry> {
    return super.deploy(overrides || {}) as Promise<Registry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  override connect(signer: Signer): Registry__factory {
    return super.connect(signer) as Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryInterface {
    return new utils.Interface(_abi) as RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}
