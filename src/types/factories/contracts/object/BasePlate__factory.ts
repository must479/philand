/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  BasePlate,
  BasePlateInterface,
} from "../../../contracts/object/BasePlate";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_phiMapAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "CreateBasePlate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogBuyBasePlate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "SetExp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "SetOpenForSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
    ],
    name: "SetShopAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchBasePlate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchBasePlateFromShop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createBasePlate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreatorAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getObjectInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "x",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "y",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "z",
                type: "uint8",
              },
            ],
            internalType: "struct BaseObject.Size",
            name: "size",
            type: "tuple",
          },
          {
            internalType: "address payable",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "forSale",
            type: "bool",
          },
        ],
        internalType: "struct BaseObject.Object",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "getObjectsPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOpenForSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "ownerCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phiMapAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
    ],
    name: "setCreatorAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "setExp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "setOpenForSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRoyalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSecondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_shopAddress",
        type: "address",
      },
    ],
    name: "setShopAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newTreasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shopAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620048ef380380620048ef8339810160408190526200003491620002c2565b604080516020808201835260008083523381529081905291909120805460ff1916600190811790915580556200006a81620001ea565b506001600160a01b038216620000bc5760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b60448201526064015b60405180910390fd5b6001600160a01b038116620001095760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b6044820152606401620000b3565b60408051808201909152600e8082526d506869204261736520506c61746560901b6020909201918252620001409160029162000203565b50604080518082019091526007808252665068692d42415360c81b6020909201918252620001719160039162000203565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001b89160049162000203565b50600680546001600160a01b0319166001600160a01b039384161790551660805260006007556101f46008556200033d565b8051620001ff90600e90602084019062000203565b5050565b828054620002119062000301565b90600052602060002090601f01602090048101928262000235576000855562000280565b82601f106200025057805160ff191683800117855562000280565b8280016001018555821562000280579182015b828111156200028057825182559160200191906001019062000263565b506200028e92915062000292565b5090565b5b808211156200028e576000815560010162000293565b6001600160a01b0381168114620002bf57600080fd5b50565b60008060408385031215620002d657600080fd5b8251620002e381620002a9565b6020840151909250620002f681620002a9565b809150509250929050565b600181811c908216806200031657607f821691505b6020821081036200033757634e487b7160e01b600052602260045260246000fd5b50919050565b60805161458f620003606000396000818161064101526122df015261458f6000f3fe60806040526004361061032c5760003560e01c8063604c7f80116101a5578063a22cb465116100ec578063c457fb3711610095578063d4f2b8141161006f578063d4f2b814146109fb578063e498922f14610a0e578063e985e9c514610a3e578063f242432a14610a5e57600080fd5b8063c457fb3714610978578063c5f956af146109a8578063cbdac710146109c857600080fd5b8063b6ed6da9116100c6578063b6ed6da91461090b578063bd85b0391461092b578063bfdc4fdf1461095857600080fd5b8063a22cb46514610892578063a30b4db9146108b2578063a6a41a29146108eb57600080fd5b806382cb6b721161014e5780639733faa5116101285780639733faa51461082257806398f2468214610852578063995225ad1461087257600080fd5b806382cb6b72146107c75780639291671a146107f757806395d89b411461080d57600080fd5b806367478a351161017f57806367478a35146107745780636a957e2a146107945780637061d486146107a757600080fd5b8063604c7f801461071457806362e8e8ac146107345780636605bfda1461075457600080fd5b80631e4c788711610274578063326bb4ad1161021d5780633ec963cb116101f75780633ec963cb146106835780634e1273f4146106a35780634f558e79146106d05780635b2bd79e146106ff57600080fd5b8063326bb4ad1461061957806339b67b6d1461062f5780633bb3a24d1461066357600080fd5b80632a55205a1161024e5780632a55205a146105875780632c383ee8146105c65780632eb2c2d6146105f957600080fd5b80631e4c78871461050057806322446fb81461051657806323bf2f671461054e57600080fd5b80630d09308e116102d6578063162094c4116102b0578063162094c414610493578063173825d9146104b35780631d1b29e0146104d357600080fd5b80630d09308e146104335780630e89341c1461045357806313af40351461047357600080fd5b806306fdde031161030757806306fdde03146103d15780630a1eeb0c146103f35780630b68e7961461041357600080fd5b8062fdd58e1461034157806301ffc9a714610374578063023c23db146103a457600080fd5b3661033c5761033a34610a7e565b005b600080fd5b34801561034d57600080fd5b5061036161035c3660046138a9565b610acb565b6040519081526020015b60405180910390f35b34801561038057600080fd5b5061039461038f366004613903565b610b79565b604051901515815260200161036b565b3480156103b057600080fd5b506103c46103bf366004613920565b610c5c565b60405161036b9190613939565b3480156103dd57600080fd5b506103e6610d31565b60405161036b91906139c3565b3480156103ff57600080fd5b5061033a61040e3660046139eb565b610dbf565b34801561041f57600080fd5b5061033a61042e366004613a17565b610e4c565b34801561043f57600080fd5b5061033a61044e366004613a17565b610ec7565b34801561045f57600080fd5b506103e661046e366004613920565b610f42565b34801561047f57600080fd5b5061033a61048e366004613a39565b610fa6565b34801561049f57600080fd5b5061033a6104ae366004613b0d565b611023565b3480156104bf57600080fd5b5061033a6104ce366004613a39565b6110a4565b3480156104df57600080fd5b506104f36104ee366004613920565b61111e565b60405161036b9190613b54565b34801561050c57600080fd5b5061036160095481565b34801561052257600080fd5b50600554610536906001600160a01b031681565b6040516001600160a01b03909116815260200161036b565b34801561055a57600080fd5b50610394610569366004613a39565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561059357600080fd5b506105a76105a2366004613a17565b6112b1565b604080516001600160a01b03909316835260208301919091520161036b565b3480156105d257600080fd5b506103946105e1366004613920565b6000908152600a602052604090206006015460ff1690565b34801561060557600080fd5b5061033a610614366004613c85565b6112dc565b34801561062557600080fd5b5061036160075481565b34801561063b57600080fd5b506105367f000000000000000000000000000000000000000000000000000000000000000081565b34801561066f57600080fd5b506103e661067e366004613920565b61137e565b34801561068f57600080fd5b5061033a61069e366004613a39565b611420565b3480156106af57600080fd5b506106c36106be366004613d33565b6114bd565b60405161036b9190613e31565b3480156106dc57600080fd5b506103946106eb366004613920565b6000908152600f6020526040902054151590565b34801561070b57600080fd5b506103e66115fb565b34801561072057600080fd5b5061033a61072f366004613ec4565b611608565b34801561074057600080fd5b5061033a61074f366004613a17565b611703565b34801561076057600080fd5b5061033a61076f366004613a39565b61177e565b34801561078057600080fd5b5061033a61078f366004613a39565b61186a565b61033a6107a2366004613ee8565b611a54565b3480156107b357600080fd5b5061033a6107c2366004613920565b611bfa565b3480156107d357600080fd5b506103946107e2366004613920565b600b6020526000908152604090205460ff1681565b34801561080357600080fd5b5061036160085481565b34801561081957600080fd5b506103e6611c5f565b34801561082e57600080fd5b5061036161083d366004613920565b6000908152600a602052604090206003015490565b34801561085e57600080fd5b5061033a61086d366004613920565b611c6c565b34801561087e57600080fd5b5061033a61088d366004613f2e565b611cd1565b34801561089e57600080fd5b5061033a6108ad366004613fac565b611de7565b3480156108be57600080fd5b506105366108cd366004613920565b6000908152600a60205260409020600201546001600160a01b031690565b3480156108f757600080fd5b50610361610906366004613fd8565b611df6565b34801561091757600080fd5b5061033a610926366004614015565b611e5d565b34801561093757600080fd5b50610361610946366004613920565b6000908152600f602052604090205490565b34801561096457600080fd5b5061033a61097336600461404a565b611ed0565b34801561098457600080fd5b50610361610993366004613920565b6000908152600a602052604090206004015490565b3480156109b457600080fd5b50600654610536906001600160a01b031681565b3480156109d457600080fd5b506109e86109e3366004613920565b611fd0565b60405161036b979695949392919061407a565b61033a610a09366004613fd8565b6120ce565b348015610a1a57600080fd5b50610361610a29366004613920565b6000908152600a602052604090206005015490565b348015610a4a57600080fd5b50610394610a593660046140f3565b6122db565b348015610a6a57600080fd5b5061033a610a79366004614121565b61234f565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a18060096000828254610ac391906141a0565b909155505050565b60006001600160a01b038316610b4e5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152600c602090815260408083206001600160a01b03861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a26000000000000000000000000000000000000000000000000000000001480610c0c57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b80610b7357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610b73565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604090206001015460ff161580610cb157506000828152600a6020526040902060010154610100900460ff16155b15610ce8576040517fa8e3a97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60028054610d3e906141b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6a906141b8565b8015610db75780601f10610d8c57610100808354040283529160200191610db7565b820191906000526020600020905b815481529060010190602001808311610d9a57829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610def576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020600601805460ff19168415159081179091558251858152918201527fd24cd22e1990320c8f339b920aee0413e3ac1cfdfb6200d6d967befa1fa1573c91015b60405180910390a15050565b3360009081526020819052604090205460ff16610e7c576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060050183905581518481529081018390527f1e1ef21dc18e8f45f4e05a47d70fbffe8371dbcc8b4815e8dbca1dbd620c43669101610e40565b3360009081526020819052604090205460ff16610ef7576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a9101610e40565b6000818152600b602052604090205460609060ff16610f7457604051636aa2a93760e01b815260040160405180910390fd5b6004610f7f8361137e565b604051602001610f9092919061420e565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610fd6576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16611053576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251611072928401906137fb565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610e409291906142b4565b3360009081526020819052604090205460ff166110d4576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6111816040805160e08101825260608082528251908101835260008082526020828101829052938201529091820190815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b6000828152600a602052604090819020815160e081019092528054829082906111a9906141b8565b80601f01602080910402602001604051908101604052809291908181526020018280546111d5906141b8565b80156112225780601f106111f757610100808354040283529160200191611222565b820191906000526020600020905b81548152906001019060200180831161120557829003601f168201915b50505091835250506040805160608082018352600185015460ff808216845261010082048116602085810191909152620100009092048116848601529085019290925260028501546001600160a01b03169284019290925260038401549183019190915260048301546080830152600583015460a0830152600690920154909116151560c09091015292915050565b60008030612710600854856112c691906142cd565b6112d09190614302565b915091505b9250929050565b6001600160a01b0385163314806112f857506112f885336122db565b61136a5760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206e6f7220617070726f76656400000000000000000000000000000000006064820152608401610b45565b61137785858585856123ea565b5050505050565b6000818152600a6020526040902080546060919061139b906141b8565b80601f01602080910402602001604051908101604052809291908181526020018280546113c7906141b8565b80156114145780601f106113e957610100808354040283529160200191611414565b820191906000526020600020905b8154815290600101906020018083116113f757829003601f168201915b50505050509050919050565b3360009081526020819052604090205460ff16611450576040516349e27cff60e01b815260040160405180910390fd5b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527fcefd22c602a88b1f72d74d02bad4b2cb1e05e85530bb77114da7c723d2aca9db906020015b60405180910390a150565b606081518351146115365760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610b45565b6000835167ffffffffffffffff81111561155257611552613a56565b60405190808252806020026020018201604052801561157b578160200160208202803683370190505b50905060005b84518110156115f3576115c685828151811061159f5761159f614324565b60200260200101518583815181106115b9576115b9614324565b6020026020010151610acb565b8282815181106115d8576115d8614324565b60209081029190910101526115ec8161433a565b9050611581565b509392505050565b60048054610d3e906141b8565b3360009081526020819052604090205460ff16611638576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020835160019091018054858401518686015160ff9485167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093168317610100928616928302177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610e40565b3360009081526020819052604090205460ff16611733576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610e40565b3360009081526020819052604090205460ff166117ae576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b0381166118045760405162461bcd60e51b815260206004820152601360248201527f63616e74207365742061646472657373283029000000000000000000000000006044820152606401610b45565b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020016114b2565b3360009081526020819052604090205460ff1661189a576040516349e27cff60e01b815260040160405180910390fd5b6002600154036118ec5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b45565b60026001556001600160a01b0381166119475760405162461bcd60e51b815260206004820152601360248201527f63616e74207365742061646472657373283029000000000000000000000000006044820152606401610b45565b600954600003611983576040517f5e6202b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600980546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d80600081146119d8576040519150601f19603f3d011682016040523d82523d6000602084013e6119dd565b606091505b5050905080611a18576040517f5e6202b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a150506001805550565b600260015403611aa65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b45565b60026001556005546001600160a01b03163314611b055760405162461bcd60e51b815260206004820152601260248201527f6d73672073656e64657220696e76616c696400000000000000000000000000006044820152606401610b45565b80516000805b82811015611b6057600a6000858381518110611b2957611b29614324565b602002602001015181526020019081526020016000206004015482611b4e91906141a0565b9150611b598161433a565b9050611b0b565b5080341015611bb15760405162461bcd60e51b815260206004820152601060248201527f6e6f7420656e6f7567682076616c7565000000000000000000000000000000006044820152606401610b45565b60005b82811015611bef57611bdf85858381518110611bd257611bd2614324565b6020026020010151612699565b611be88161433a565b9050611bb4565b505060018055505050565b3360009081526020819052604090205460ff16611c2a576040516349e27cff60e01b815260040160405180910390fd5b60088190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf906020016114b2565b60038054610d3e906141b8565b3360009081526020819052604090205460ff16611c9c576040516349e27cff60e01b815260040160405180910390fd5b60078190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e1906020016114b2565b3360009081526020819052604090205460ff16611d01576040516349e27cff60e01b815260040160405180910390fd5b6000868152600f602052604090205415611d47576040517f87cf36d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d518686611023565b611d5b8685611608565b611d658684611ed0565b611d6f8683610ec7565b611d798682611703565b611d84866001610dbf565b6000868152600b602052604090819020805460ff19166001179055517f5d5a6d9833e8515975e6342bc17e72dc91f0b664b71d492089857b90b377ba9790611dd790889088908890889088908890614354565b60405180910390a1505050505050565b611df2338383612a2a565b5050565b80516000908190815b81811015611e5457600a6000868381518110611e1d57611e1d614324565b602002602001015181526020019081526020016000206004015483611e4291906141a0565b9250611e4d8161433a565b9050611dff565b50909392505050565b3360009081526020819052604090205460ff16611e8d576040516349e27cff60e01b815260040160405180910390fd5b8051611ea09060049060208401906137fb565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516114b291906139c3565b3360009081526020819052604090205460ff16611f00576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116611f565760405162461bcd60e51b815260206004820152601360248201527f63616e74207365742061646472657373283029000000000000000000000000006044820152606401610b45565b6000828152600a602090815260409182902060020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610e40565b600a60205260009081526040902080548190611feb906141b8565b80601f0160208091040260200160405190810160405280929190818152602001828054612017906141b8565b80156120645780601f1061203957610100808354040283529160200191612064565b820191906000526020600020905b81548152906001019060200180831161204757829003601f168201915b505060408051606081018252600187015460ff80821683526101008204811660208401526201000090910481169282019290925260028701546003880154600489015460058a01546006909a0154989993986001600160a01b039093169750909550935090911687565b6002600154036121205760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b45565b60026001556000336121745760405162461bcd60e51b815260206004820152601860248201527f6d73672073656e64657228302920697320696e76616c696400000000000000006044820152606401610b45565b3332146121c35760405162461bcd60e51b815260206004820152601260248201527f6d73672073656e64657220696e76616c696400000000000000000000000000006044820152606401610b45565b815160005b8181101561221d57600a60008583815181106121e6576121e6614324565b60200260200101518152602001908152602001600020600401548361220b91906141a0565b92506122168161433a565b90506121c8565b50813410156122945760405162461bcd60e51b815260206004820152603160248201527f73686f756c6420626520657175616c20746f206f72206d6f7265207468616e2060448201527f74686520746f6b656e27732070726963650000000000000000000000000000006064820152608401610b45565b60005b818110156122d1576122c18482815181106122b4576122b4614324565b6020026020010151612b1e565b6122ca8161433a565b9050612297565b5050600180555050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03160361231e57506001610b73565b6001600160a01b038084166000908152600d602090815260408083209386168352929052205460ff165b9392505050565b6001600160a01b03851633148061236b575061236b85336122db565b6123dd5760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206e6f7220617070726f76656400000000000000000000000000000000006064820152608401610b45565b6113778585858585612ea5565b81518351146124615760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610b45565b6001600160a01b0384166124dd5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610b45565b336124ec81878787878761308d565b60005b845181101561262b57600085828151811061250c5761250c614324565b60200260200101519050600085838151811061252a5761252a614324565b6020908102919091018101516000848152600c835260408082206001600160a01b038e1683529093529190912054909150818110156125d15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610b45565b6000838152600c602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906126109084906141a0565b92505081905550505050806126249061433a565b90506124ef565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161267b9291906143c4565b60405180910390a4612691818787878787613224565b505050505050565b6126a281613428565b6000818152600a602052604090206006015460ff166127035760405162461bcd60e51b815260206004820152601160248201527f6e6f74206f70656e20666f722073616c650000000000000000000000000000006044820152606401610b45565b6000818152600a6020908152604080832060030154600f90925290912054111561276f5760405162461bcd60e51b815260206004820152601060248201527f7265616368206d6178436c61696d6564000000000000000000000000000000006044820152606401610b45565b6000818152600a6020526040812060040154600754829161278f916134a1565b91509150816127cd5760405162461bcd60e51b815260206004820152600a60248201526931b0b6319032b93937b960b11b6044820152606401610b45565b6000806127dc836127106134ea565b915091508161281a5760405162461bcd60e51b815260206004820152600a60248201526931b0b6319032b93937b960b11b6044820152606401610b45565b6000858152600a60205260408082206002015490516001600160a01b039091169083908381818185875af1925050503d8060008114612875576040519150601f19603f3d011682016040523d82523d6000602084013e61287a565b606091505b50509050806128cb5760405162461bcd60e51b815260206004820152601160248201527f63616e742070617920726f79616c6974790000000000000000000000000000006044820152606401610b45565b6006546000878152600a602052604081206004015490916001600160a01b0316906128f79085906143e9565b604051600081818185875af1925050503d8060008114612933576040519150601f19603f3d011682016040523d82523d6000602084013e612938565b606091505b50509050806129895760405162461bcd60e51b815260206004820152601360248201527f63616e74207472616e736665722073616c6573000000000000000000000000006044820152606401610b45565b6129cb888860016040518060400160405280600281526020017f307800000000000000000000000000000000000000000000000000000000000081525061351d565b6000878152600a60209081526040918290206004015482518a8152918201526001600160a01b038a16917fe6218edc5f92a07a8fb7695675127a7641f59ba430ead560813bd4921f141e0e910160405180910390a25050505050505050565b816001600160a01b0316836001600160a01b031603612ab15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610b45565b6001600160a01b038381166000818152600d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612b2781613428565b6000818152600a602052604090206006015460ff16612b885760405162461bcd60e51b815260206004820152601060248201527f6e6f74206f70656e20666f7253616c65000000000000000000000000000000006044820152606401610b45565b6000818152600a6020908152604080832060030154600f909252909120541115612bf45760405162461bcd60e51b815260206004820152601060248201527f7265616368206d6178436c61696d6564000000000000000000000000000000006044820152606401610b45565b6000818152600a60205260408120600401546007548291612c14916134a1565b9150915081612c525760405162461bcd60e51b815260206004820152600a60248201526931b0b6319032b93937b960b11b6044820152606401610b45565b600080612c61836127106134ea565b9150915081612c9f5760405162461bcd60e51b815260206004820152600a60248201526931b0b6319032b93937b960b11b6044820152606401610b45565b6000858152600a60205260408082206002015490516001600160a01b039091169083908381818185875af1925050503d8060008114612cfa576040519150601f19603f3d011682016040523d82523d6000602084013e612cff565b606091505b5050905080612d505760405162461bcd60e51b815260206004820152601160248201527f63616e742070617920726f79616c6974790000000000000000000000000000006044820152606401610b45565b6006546000878152600a602052604081206004015490916001600160a01b031690612d7c9085906143e9565b604051600081818185875af1925050503d8060008114612db8576040519150601f19603f3d011682016040523d82523d6000602084013e612dbd565b606091505b5050905080612e0e5760405162461bcd60e51b815260206004820152601260248201527f63616e74207472616e736665722073616c6500000000000000000000000000006044820152606401610b45565b612e50338860016040518060400160405280600281526020017f307800000000000000000000000000000000000000000000000000000000000081525061351d565b6000878152600a60209081526040918290206004015482518a81529182015233917fe6218edc5f92a07a8fb7695675127a7641f59ba430ead560813bd4921f141e0e910160405180910390a250505050505050565b6001600160a01b038416612f215760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610b45565b336000612f2d85613655565b90506000612f3a85613655565b9050612f4a83898985858961308d565b6000868152600c602090815260408083206001600160a01b038c16845290915290205485811015612fe35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610b45565b6000878152600c602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906130229084906141a0565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4613082848a8a8a8a8a6136a0565b505050505050505050565b6001600160a01b0385166131145760005b8351811015613112578281815181106130b9576130b9614324565b6020026020010151600f60008684815181106130d7576130d7614324565b6020026020010151815260200190815260200160002060008282546130fc91906141a0565b9091555061310b90508161433a565b905061309e565b505b6001600160a01b0384166126915760005b835181101561321b57600084828151811061314257613142614324565b60200260200101519050600084838151811061316057613160614324565b602002602001015190506000600f6000848152602001908152602001600020549050818110156131f85760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610b45565b6000928352600f6020526040909220910390556132148161433a565b9050613125565b50505050505050565b6001600160a01b0384163b15612691576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c81906132819089908990889088908890600401614400565b6020604051808303816000875af19250505080156132bc575060408051601f3d908101601f191682019092526132b99181019061445e565b60015b613371576132c861447b565b806308c379a00361330157506132dc614497565b806132e75750613303565b8060405162461bcd60e51b8152600401610b4591906139c3565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610b45565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461321b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610b45565b80158061345157506000818152600a6020908152604080832060030154600f9092529091205410155b1561346f57604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661349e57604051636aa2a93760e01b815260040160405180910390fd5b50565b600080836000036134b857506001905060006112d5565b838302838582816134cb576134cb6142ec565b04146134de5760008092509250506112d5565b60019590945092505050565b60008082600003613500575060009050806112d5565b6001838581613511576135116142ec565b04915091509250929050565b6001600160a01b0384166135995760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610b45565b3360006135a585613655565b905060006135b285613655565b90506135c38360008985858961308d565b6000868152600c602090815260408083206001600160a01b038b168452909152812080548792906135f59084906141a0565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461321b836000898989896136a0565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061368f5761368f614324565b602090810291909101015292915050565b6001600160a01b0384163b15612691576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906136fd908990899088908890889060040161453f565b6020604051808303816000875af1925050508015613738575060408051601f3d908101601f191682019092526137359181019061445e565b60015b613744576132c861447b565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461321b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610b45565b828054613807906141b8565b90600052602060002090601f016020900481019282613829576000855561386f565b82601f1061384257805160ff191683800117855561386f565b8280016001018555821561386f579182015b8281111561386f578251825591602001919060010190613854565b5061387b92915061387f565b5090565b5b8082111561387b5760008155600101613880565b6001600160a01b038116811461349e57600080fd5b600080604083850312156138bc57600080fd5b82356138c781613894565b946020939093013593505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461349e57600080fd5b60006020828403121561391557600080fd5b8135612348816138d5565b60006020828403121561393257600080fd5b5035919050565b60608101610b73828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561398257818101518382015260200161396a565b83811115613991576000848401525b50505050565b600081518084526139af816020860160208601613967565b601f01601f19169290920160200192915050565b6020815260006123486020830184613997565b803580151581146139e657600080fd5b919050565b600080604083850312156139fe57600080fd5b82359150613a0e602084016139d6565b90509250929050565b60008060408385031215613a2a57600080fd5b50508035926020909101359150565b600060208284031215613a4b57600080fd5b813561234881613894565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715613a9257613a92613a56565b6040525050565b600082601f830112613aaa57600080fd5b813567ffffffffffffffff811115613ac457613ac4613a56565b604051613adb6020601f19601f8501160182613a6c565b818152846020838601011115613af057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215613b2057600080fd5b82359150602083013567ffffffffffffffff811115613b3e57600080fd5b613b4a85828601613a99565b9150509250929050565b6020815260008251610120806020850152613b73610140850183613997565b91506020850151613ba7604086018260ff815116825260ff602082015116602083015260ff60408201511660408301525050565b506001600160a01b0360408601511660a0850152606085015160c0850152608085015160e085015260a085015161010085015260c0850151151581850152508091505092915050565b600067ffffffffffffffff821115613c0a57613c0a613a56565b5060051b60200190565b600082601f830112613c2557600080fd5b81356020613c3282613bf0565b604051613c3f8282613a6c565b83815260059390931b8501820192828101915086841115613c5f57600080fd5b8286015b84811015613c7a5780358352918301918301613c63565b509695505050505050565b600080600080600060a08688031215613c9d57600080fd5b8535613ca881613894565b94506020860135613cb881613894565b9350604086013567ffffffffffffffff80821115613cd557600080fd5b613ce189838a01613c14565b94506060880135915080821115613cf757600080fd5b613d0389838a01613c14565b93506080880135915080821115613d1957600080fd5b50613d2688828901613a99565b9150509295509295909350565b60008060408385031215613d4657600080fd5b823567ffffffffffffffff80821115613d5e57600080fd5b818501915085601f830112613d7257600080fd5b81356020613d7f82613bf0565b604051613d8c8282613a6c565b83815260059390931b8501820192828101915089841115613dac57600080fd5b948201945b83861015613dd3578535613dc481613894565b82529482019490820190613db1565b96505086013592505080821115613de957600080fd5b50613b4a85828601613c14565b600081518084526020808501945080840160005b83811015613e2657815187529582019590820190600101613e0a565b509495945050505050565b6020815260006123486020830184613df6565b803560ff811681146139e657600080fd5b600060608284031215613e6757600080fd5b6040516060810181811067ffffffffffffffff82111715613e8a57613e8a613a56565b604052905080613e9983613e44565b8152613ea760208401613e44565b6020820152613eb860408401613e44565b60408201525092915050565b60008060808385031215613ed757600080fd5b82359150613a0e8460208501613e55565b60008060408385031215613efb57600080fd5b8235613f0681613894565b9150602083013567ffffffffffffffff811115613f2257600080fd5b613b4a85828601613c14565b6000806000806000806101008789031215613f4857600080fd5b86359550602087013567ffffffffffffffff811115613f6657600080fd5b613f7289828a01613a99565b955050613f828860408901613e55565b935060a0870135613f9281613894565b9598949750929560c08101359460e0909101359350915050565b60008060408385031215613fbf57600080fd5b8235613fca81613894565b9150613a0e602084016139d6565b600060208284031215613fea57600080fd5b813567ffffffffffffffff81111561400157600080fd5b61400d84828501613c14565b949350505050565b60006020828403121561402757600080fd5b813567ffffffffffffffff81111561403e57600080fd5b61400d84828501613a99565b6000806040838503121561405d57600080fd5b82359150602083013561406f81613894565b809150509250929050565b600061012080835261408e8184018b613997565b9150506140be602083018960ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b0396909616608082015260a081019490945260c084019290925260e083015215156101009091015292915050565b6000806040838503121561410657600080fd5b823561411181613894565b9150602083013561406f81613894565b600080600080600060a0868803121561413957600080fd5b853561414481613894565b9450602086013561415481613894565b93506040860135925060608601359150608086013567ffffffffffffffff81111561417e57600080fd5b613d2688828901613a99565b634e487b7160e01b600052601160045260246000fd5b600082198211156141b3576141b361418a565b500190565b600181811c908216806141cc57607f821691505b6020821081036141ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151614204818560208601613967565b9290920192915050565b600080845481600182811c91508083168061422a57607f831692505b6020808410820361424957634e487b7160e01b86526022600452602486fd5b81801561425d576001811461426e5761429b565b60ff1986168952848901965061429b565b60008b81526020902060005b868110156142935781548b82015290850190830161427a565b505084890196505b5050505050506142ab81856141f2565b95945050505050565b82815260406020820152600061400d6040830184613997565b60008160001904831182151516156142e7576142e761418a565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261431f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019820361434d5761434d61418a565b5060010190565b600061010088835280602084015261436e81840189613997565b91505061439e604083018760ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03851660a08301528360c08301528260e0830152979650505050505050565b6040815260006143d76040830185613df6565b82810360208401526142ab8185613df6565b6000828210156143fb576143fb61418a565b500390565b60006001600160a01b03808816835280871660208401525060a0604083015261442c60a0830186613df6565b828103606084015261443e8186613df6565b905082810360808401526144528185613997565b98975050505050505050565b60006020828403121561447057600080fd5b8151612348816138d5565b600060033d11156144945760046000803e5060005160e01c5b90565b600060443d10156144a55790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156144f357505050505090565b828501915081518181111561450b5750505050505090565b843d87010160208285010111156145255750505050505090565b61453460208286010187613a6c565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261457760a0830184613997565b97965050505050505056fea164736f6c634300080d000a";

type BasePlateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasePlateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasePlate__factory extends ContractFactory {
  constructor(...args: BasePlateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: PromiseOrValue<string>,
    _phiMapAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasePlate> {
    return super.deploy(
      _treasuryAddress,
      _phiMapAddress,
      overrides || {}
    ) as Promise<BasePlate>;
  }
  override getDeployTransaction(
    _treasuryAddress: PromiseOrValue<string>,
    _phiMapAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasuryAddress,
      _phiMapAddress,
      overrides || {}
    );
  }
  override attach(address: string): BasePlate {
    return super.attach(address) as BasePlate;
  }
  override connect(signer: Signer): BasePlate__factory {
    return super.connect(signer) as BasePlate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasePlateInterface {
    return new utils.Interface(_abi) as BasePlateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasePlate {
    return new Contract(address, _abi, signerOrProvider) as BasePlate;
  }
}
