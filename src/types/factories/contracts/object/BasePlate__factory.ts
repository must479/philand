/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  BasePlate,
  BasePlateInterface,
} from "../../../contracts/object/BasePlate";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_phiMapAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "CreateBasePlate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogBuyBasePlate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "SetExp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "SetOpenForSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
    ],
    name: "SetShopAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchBasePlate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchBasePlateFromShop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createBasePlate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreatorAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getObjectInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "x",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "y",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "z",
                type: "uint8",
              },
            ],
            internalType: "struct BaseObject.Size",
            name: "size",
            type: "tuple",
          },
          {
            internalType: "address payable",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "forSale",
            type: "bool",
          },
        ],
        internalType: "struct BaseObject.Object",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "getObjectsPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOpenForSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoyalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "ownerCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phiMapAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
    ],
    name: "setCreatorAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "setExp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "setOpenForSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRoyalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSecondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_shopAddress",
        type: "address",
      },
    ],
    name: "setShopAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newTreasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shopAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620046a9380380620046a98339810160408190526200003491620002c2565b604080516020808201835260008083523381529081905291909120805460ff1916600190811790915580556200006a81620001ea565b506001600160a01b038216620000bc5760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b60448201526064015b60405180910390fd5b6001600160a01b038116620001095760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b6044820152606401620000b3565b60408051808201909152600e8082526d506869204261736520506c61746560901b6020909201918252620001409160029162000203565b50604080518082019091526007808252665068692d42415360c81b6020909201918252620001719160039162000203565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001b89160049162000203565b50600680546001600160a01b0319166001600160a01b039384161790551660805260006007556101f46008556200033d565b8051620001ff90600e90602084019062000203565b5050565b828054620002119062000301565b90600052602060002090601f01602090048101928262000235576000855562000280565b82601f106200025057805160ff191683800117855562000280565b8280016001018555821562000280579182015b828111156200028057825182559160200191906001019062000263565b506200028e92915062000292565b5090565b5b808211156200028e576000815560010162000293565b6001600160a01b0381168114620002bf57600080fd5b50565b60008060408385031215620002d657600080fd5b8251620002e381620002a9565b6020840151909250620002f681620002a9565b809150509250929050565b600181811c908216806200031657607f821691505b6020821081036200033757634e487b7160e01b600052602260045260246000fd5b50919050565b6080516143496200036060003960008181610662015261229c01526143496000f3fe60806040526004361061034d5760003560e01c806362e8e8ac116101bb578063a30b4db9116100f7578063cbdac71011610095578063e498922f1161006f578063e498922f14610a62578063e985e9c514610a92578063ea2fe3cb14610ab2578063f242432a14610ac757600080fd5b8063cbdac710146109fe578063d4f2b81414610a31578063e002460414610a4457600080fd5b8063bd85b039116100d1578063bd85b03914610961578063bfdc4fdf1461098e578063c457fb37146109ae578063c5f956af146109de57600080fd5b8063a30b4db9146108e8578063a6a41a2914610921578063b6ed6da91461094157600080fd5b806382cb6b72116101645780639733faa51161013e5780639733faa51461085857806398f2468214610888578063995225ad146108a8578063a22cb465146108c857600080fd5b806382cb6b72146107fd5780639291671a1461082d57806395d89b411461084357600080fd5b806367478a351161019557806367478a35146107aa5780636a957e2a146107ca5780637061d486146107dd57600080fd5b806362e8e8ac14610755578063653f0884146107755780636605bfda1461078a57600080fd5b806322446fb81161028a57806339b67b6d116102335780634e1273f41161020d5780634e1273f4146106c45780634f558e79146106f15780635b2bd79e14610720578063604c7f801461073557600080fd5b806339b67b6d146106505780633bb3a24d146106845780633ec963cb146106a457600080fd5b80632c383ee8116102645780632c383ee8146105e75780632eb2c2d61461061a578063326bb4ad1461063a57600080fd5b806322446fb81461053757806323bf2f671461056f5780632a55205a146105a857600080fd5b80630d09308e116102f7578063162094c4116102d1578063162094c4146104b4578063173825d9146104d45780631d1b29e0146104f45780631e4c78871461052157600080fd5b80630d09308e146104545780630e89341c1461047457806313af40351461049457600080fd5b806306fdde031161032857806306fdde03146103f25780630a1eeb0c146104145780630b68e7961461043457600080fd5b8062fdd58e1461036257806301ffc9a714610395578063023c23db146103c557600080fd5b3661035d5761035b34610ae7565b005b600080fd5b34801561036e57600080fd5b5061038261037d366004613663565b610b34565b6040519081526020015b60405180910390f35b3480156103a157600080fd5b506103b56103b03660046136bd565b610be2565b604051901515815260200161038c565b3480156103d157600080fd5b506103e56103e03660046136da565b610cc5565b60405161038c91906136f3565b3480156103fe57600080fd5b50610407610d9a565b60405161038c919061377d565b34801561042057600080fd5b5061035b61042f3660046137a5565b610e28565b34801561044057600080fd5b5061035b61044f3660046137d1565b610eb5565b34801561046057600080fd5b5061035b61046f3660046137d1565b610f30565b34801561048057600080fd5b5061040761048f3660046136da565b610fab565b3480156104a057600080fd5b5061035b6104af3660046137f3565b61100f565b3480156104c057600080fd5b5061035b6104cf3660046138c7565b61108c565b3480156104e057600080fd5b5061035b6104ef3660046137f3565b61110d565b34801561050057600080fd5b5061051461050f3660046136da565b611187565b60405161038c919061390e565b34801561052d57600080fd5b5061038260095481565b34801561054357600080fd5b50600554610557906001600160a01b031681565b6040516001600160a01b03909116815260200161038c565b34801561057b57600080fd5b506103b561058a3660046137f3565b6001600160a01b031660009081526020819052604090205460ff1690565b3480156105b457600080fd5b506105c86105c33660046137d1565b61131a565b604080516001600160a01b03909316835260208301919091520161038c565b3480156105f357600080fd5b506103b56106023660046136da565b6000908152600a602052604090206006015460ff1690565b34801561062657600080fd5b5061035b610635366004613a3f565b611345565b34801561064657600080fd5b5061038260075481565b34801561065c57600080fd5b506105577f000000000000000000000000000000000000000000000000000000000000000081565b34801561069057600080fd5b5061040761069f3660046136da565b6113e7565b3480156106b057600080fd5b5061035b6106bf3660046137f3565b611489565b3480156106d057600080fd5b506106e46106df366004613aed565b611526565b60405161038c9190613beb565b3480156106fd57600080fd5b506103b561070c3660046136da565b6000908152600f6020526040902054151590565b34801561072c57600080fd5b50610407611664565b34801561074157600080fd5b5061035b610750366004613c7e565b611671565b34801561076157600080fd5b5061035b6107703660046137d1565b61176c565b34801561078157600080fd5b50600754610382565b34801561079657600080fd5b5061035b6107a53660046137f3565b6117e7565b3480156107b657600080fd5b5061035b6107c53660046137f3565b6118d3565b61035b6107d8366004613ca2565b611abd565b3480156107e957600080fd5b5061035b6107f83660046136da565b611c63565b34801561080957600080fd5b506103b56108183660046136da565b600b6020526000908152604090205460ff1681565b34801561083957600080fd5b5061038260085481565b34801561084f57600080fd5b50610407611cc8565b34801561086457600080fd5b506103826108733660046136da565b6000908152600a602052604090206003015490565b34801561089457600080fd5b5061035b6108a33660046136da565b611cd5565b3480156108b457600080fd5b5061035b6108c3366004613ce8565b611d3a565b3480156108d457600080fd5b5061035b6108e3366004613d66565b611e50565b3480156108f457600080fd5b506105576109033660046136da565b6000908152600a60205260409020600201546001600160a01b031690565b34801561092d57600080fd5b5061038261093c366004613d92565b611e5f565b34801561094d57600080fd5b5061035b61095c366004613dcf565b611ec6565b34801561096d57600080fd5b5061038261097c3660046136da565b6000908152600f602052604090205490565b34801561099a57600080fd5b5061035b6109a9366004613e04565b611f39565b3480156109ba57600080fd5b506103826109c93660046136da565b6000908152600a602052604090206004015490565b3480156109ea57600080fd5b50600654610557906001600160a01b031681565b348015610a0a57600080fd5b50610a1e610a193660046136da565b612039565b60405161038c9796959493929190613e34565b61035b610a3f366004613d92565b612137565b348015610a5057600080fd5b506006546001600160a01b0316610557565b348015610a6e57600080fd5b50610382610a7d3660046136da565b6000908152600a602052604090206005015490565b348015610a9e57600080fd5b506103b5610aad366004613ead565b612298565b348015610abe57600080fd5b5061040761230c565b348015610ad357600080fd5b5061035b610ae2366004613edb565b61239e565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a18060096000828254610b2c9190613f5a565b909155505050565b60006001600160a01b038316610bb75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152600c602090815260408083206001600160a01b03861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a26000000000000000000000000000000000000000000000000000000001480610c7557507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b80610bdc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610bdc565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604090206001015460ff161580610d1a57506000828152600a6020526040902060010154610100900460ff16155b15610d51576040517fa8e3a97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60028054610da790613f72565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd390613f72565b8015610e205780601f10610df557610100808354040283529160200191610e20565b820191906000526020600020905b815481529060010190602001808311610e0357829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610e58576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020600601805460ff19168415159081179091558251858152918201527fd24cd22e1990320c8f339b920aee0413e3ac1cfdfb6200d6d967befa1fa1573c91015b60405180910390a15050565b3360009081526020819052604090205460ff16610ee5576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060050183905581518481529081018390527f1e1ef21dc18e8f45f4e05a47d70fbffe8371dbcc8b4815e8dbca1dbd620c43669101610ea9565b3360009081526020819052604090205460ff16610f60576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a9101610ea9565b6000818152600b602052604090205460609060ff16610fdd57604051636aa2a93760e01b815260040160405180910390fd5b6004610fe8836113e7565b604051602001610ff9929190613fc8565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff1661103f576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff166110bc576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604090912082516110db928401906135b5565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610ea992919061406e565b3360009081526020819052604090205460ff1661113d576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6111ea6040805160e08101825260608082528251908101835260008082526020828101829052938201529091820190815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b6000828152600a602052604090819020815160e0810190925280548290829061121290613f72565b80601f016020809104026020016040519081016040528092919081815260200182805461123e90613f72565b801561128b5780601f106112605761010080835404028352916020019161128b565b820191906000526020600020905b81548152906001019060200180831161126e57829003601f168201915b50505091835250506040805160608082018352600185015460ff808216845261010082048116602085810191909152620100009092048116848601529085019290925260028501546001600160a01b03169284019290925260038401549183019190915260048301546080830152600583015460a0830152600690920154909116151560c09091015292915050565b600080306127106008548561132f9190614087565b61133991906140bc565b915091505b9250929050565b6001600160a01b03851633148061136157506113618533612298565b6113d35760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206e6f7220617070726f76656400000000000000000000000000000000006064820152608401610bae565b6113e08585858585612439565b5050505050565b6000818152600a6020526040902080546060919061140490613f72565b80601f016020809104026020016040519081016040528092919081815260200182805461143090613f72565b801561147d5780601f106114525761010080835404028352916020019161147d565b820191906000526020600020905b81548152906001019060200180831161146057829003601f168201915b50505050509050919050565b3360009081526020819052604090205460ff166114b9576040516349e27cff60e01b815260040160405180910390fd5b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527fcefd22c602a88b1f72d74d02bad4b2cb1e05e85530bb77114da7c723d2aca9db906020015b60405180910390a150565b6060815183511461159f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610bae565b6000835167ffffffffffffffff8111156115bb576115bb613810565b6040519080825280602002602001820160405280156115e4578160200160208202803683370190505b50905060005b845181101561165c5761162f858281518110611608576116086140de565b6020026020010151858381518110611622576116226140de565b6020026020010151610b34565b828281518110611641576116416140de565b6020908102919091010152611655816140f4565b90506115ea565b509392505050565b60048054610da790613f72565b3360009081526020819052604090205460ff166116a1576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020835160019091018054858401518686015160ff9485167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093168317610100928616928302177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610ea9565b3360009081526020819052604090205460ff1661179c576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610ea9565b3360009081526020819052604090205460ff16611817576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b03811661186d5760405162461bcd60e51b815260206004820152601360248201527f63616e74207365742061646472657373283029000000000000000000000000006044820152606401610bae565b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c609060200161151b565b3360009081526020819052604090205460ff16611903576040516349e27cff60e01b815260040160405180910390fd5b6002600154036119555760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bae565b60026001556001600160a01b0381166119b05760405162461bcd60e51b815260206004820152601360248201527f63616e74207365742061646472657373283029000000000000000000000000006044820152606401610bae565b6009546000036119ec576040517f5e6202b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600980546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d8060008114611a41576040519150601f19603f3d011682016040523d82523d6000602084013e611a46565b606091505b5050905080611a81576040517f5e6202b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a150506001805550565b600260015403611b0f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bae565b60026001556005546001600160a01b03163314611b6e5760405162461bcd60e51b815260206004820152601260248201527f6d73672073656e64657220696e76616c696400000000000000000000000000006044820152606401610bae565b80516000805b82811015611bc957600a6000858381518110611b9257611b926140de565b602002602001015181526020019081526020016000206004015482611bb79190613f5a565b9150611bc2816140f4565b9050611b74565b5080341015611c1a5760405162461bcd60e51b815260206004820152601060248201527f6e6f7420656e6f7567682076616c7565000000000000000000000000000000006044820152606401610bae565b60005b82811015611c5857611c4885858381518110611c3b57611c3b6140de565b60200260200101516126e8565b611c51816140f4565b9050611c1d565b505060018055505050565b3360009081526020819052604090205460ff16611c93576040516349e27cff60e01b815260040160405180910390fd5b60088190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf9060200161151b565b60038054610da790613f72565b3360009081526020819052604090205460ff16611d05576040516349e27cff60e01b815260040160405180910390fd5b60078190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e19060200161151b565b3360009081526020819052604090205460ff16611d6a576040516349e27cff60e01b815260040160405180910390fd5b6000868152600f602052604090205415611db0576040517f87cf36d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611dba868661108c565b611dc48685611671565b611dce8684611f39565b611dd88683610f30565b611de2868261176c565b611ded866001610e28565b6000868152600b602052604090819020805460ff19166001179055517f5d5a6d9833e8515975e6342bc17e72dc91f0b664b71d492089857b90b377ba9790611e409088908890889088908890889061410e565b60405180910390a1505050505050565b611e5b338383612950565b5050565b80516000908190815b81811015611ebd57600a6000868381518110611e8657611e866140de565b602002602001015181526020019081526020016000206004015483611eab9190613f5a565b9250611eb6816140f4565b9050611e68565b50909392505050565b3360009081526020819052604090205460ff16611ef6576040516349e27cff60e01b815260040160405180910390fd5b8051611f099060049060208401906135b5565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d8160405161151b919061377d565b3360009081526020819052604090205460ff16611f69576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116611fbf5760405162461bcd60e51b815260206004820152601360248201527f63616e74207365742061646472657373283029000000000000000000000000006044820152606401610bae565b6000828152600a602090815260409182902060020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610ea9565b600a6020526000908152604090208054819061205490613f72565b80601f016020809104026020016040519081016040528092919081815260200182805461208090613f72565b80156120cd5780601f106120a2576101008083540402835291602001916120cd565b820191906000526020600020905b8154815290600101906020018083116120b057829003601f168201915b505060408051606081018252600187015460ff80821683526101008204811660208401526201000090910481169282019290925260028701546003880154600489015460058a01546006909a0154989993986001600160a01b039093169750909550935090911687565b6002600154036121895760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bae565b600260015560003361219a57600080fd5b3332146121e95760405162461bcd60e51b815260206004820152601260248201527f6d73672073656e64657220696e76616c696400000000000000000000000000006044820152606401610bae565b815160005b8181101561224357600a600085838151811061220c5761220c6140de565b6020026020010151815260200190815260200160002060040154836122319190613f5a565b925061223c816140f4565b90506121ee565b508134101561225157600080fd5b60005b8181101561228e5761227e848281518110612271576122716140de565b6020026020010151612a44565b612287816140f4565b9050612254565b5050600180555050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036122db57506001610bdc565b6001600160a01b038084166000908152600d602090815260408083209386168352929052205460ff165b9392505050565b60606004805461231b90613f72565b80601f016020809104026020016040519081016040528092919081815260200182805461234790613f72565b80156123945780601f1061236957610100808354040283529160200191612394565b820191906000526020600020905b81548152906001019060200180831161237757829003601f168201915b5050505050905090565b6001600160a01b0385163314806123ba57506123ba8533612298565b61242c5760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206e6f7220617070726f76656400000000000000000000000000000000006064820152608401610bae565b6113e08585858585612c5f565b81518351146124b05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610bae565b6001600160a01b03841661252c5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610bae565b3361253b818787878787612e47565b60005b845181101561267a57600085828151811061255b5761255b6140de565b602002602001015190506000858381518110612579576125796140de565b6020908102919091018101516000848152600c835260408082206001600160a01b038e1683529093529190912054909150818110156126205760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610bae565b6000838152600c602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061265f908490613f5a565b9250508190555050505080612673906140f4565b905061253e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516126ca92919061417e565b60405180910390a46126e0818787878787612fde565b505050505050565b6126f1816131e2565b6000818152600a602052604090206006015460ff166127525760405162461bcd60e51b815260206004820152601160248201527f6e6f74206f70656e20666f722073616c650000000000000000000000000000006044820152606401610bae565b6000818152600a6020908152604080832060030154600f90925290912054111561277b57600080fd5b6000818152600a6020526040812060040154600754829161279b9161325b565b91509150816127a957600080fd5b6000806127b8836127106132a4565b91509150816127c657600080fd5b6000858152600a60205260408082206002015490516001600160a01b039091169083908381818185875af1925050503d8060008114612821576040519150601f19603f3d011682016040523d82523d6000602084013e612826565b606091505b505090508061283457600080fd5b6006546000878152600a602052604081206004015490916001600160a01b0316906128609085906141a3565b604051600081818185875af1925050503d806000811461289c576040519150601f19603f3d011682016040523d82523d6000602084013e6128a1565b606091505b50509050806128af57600080fd5b6128f1888860016040518060400160405280600281526020017f30780000000000000000000000000000000000000000000000000000000000008152506132d7565b6000878152600a60209081526040918290206004015482518a8152918201526001600160a01b038a16917fe6218edc5f92a07a8fb7695675127a7641f59ba430ead560813bd4921f141e0e910160405180910390a25050505050505050565b816001600160a01b0316836001600160a01b0316036129d75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610bae565b6001600160a01b038381166000818152600d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b612a4d816131e2565b6000818152600a602052604090206006015460ff16612a6b57600080fd5b6000818152600a6020908152604080832060030154600f909252909120541115612a9457600080fd5b6000818152600a60205260408120600401546007548291612ab49161325b565b9150915081612ac257600080fd5b600080612ad1836127106132a4565b9150915081612adf57600080fd5b6000858152600a60205260408082206002015490516001600160a01b039091169083908381818185875af1925050503d8060008114612b3a576040519150601f19603f3d011682016040523d82523d6000602084013e612b3f565b606091505b5050905080612b4d57600080fd5b6006546000878152600a602052604081206004015490916001600160a01b031690612b799085906141a3565b604051600081818185875af1925050503d8060008114612bb5576040519150601f19603f3d011682016040523d82523d6000602084013e612bba565b606091505b5050905080612bc857600080fd5b612c0a338860016040518060400160405280600281526020017f30780000000000000000000000000000000000000000000000000000000000008152506132d7565b6000878152600a60209081526040918290206004015482518a81529182015233917fe6218edc5f92a07a8fb7695675127a7641f59ba430ead560813bd4921f141e0e910160405180910390a250505050505050565b6001600160a01b038416612cdb5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610bae565b336000612ce78561340f565b90506000612cf48561340f565b9050612d04838989858589612e47565b6000868152600c602090815260408083206001600160a01b038c16845290915290205485811015612d9d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610bae565b6000878152600c602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290612ddc908490613f5a565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612e3c848a8a8a8a8a61345a565b505050505050505050565b6001600160a01b038516612ece5760005b8351811015612ecc57828181518110612e7357612e736140de565b6020026020010151600f6000868481518110612e9157612e916140de565b602002602001015181526020019081526020016000206000828254612eb69190613f5a565b90915550612ec59050816140f4565b9050612e58565b505b6001600160a01b0384166126e05760005b8351811015612fd5576000848281518110612efc57612efc6140de565b602002602001015190506000848381518110612f1a57612f1a6140de565b602002602001015190506000600f600084815260200190815260200160002054905081811015612fb25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610bae565b6000928352600f602052604090922091039055612fce816140f4565b9050612edf565b50505050505050565b6001600160a01b0384163b156126e0576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c819061303b90899089908890889088906004016141ba565b6020604051808303816000875af1925050508015613076575060408051601f3d908101601f1916820190925261307391810190614218565b60015b61312b57613082614235565b806308c379a0036130bb5750613096614251565b806130a157506130bd565b8060405162461bcd60e51b8152600401610bae919061377d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610bae565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014612fd55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610bae565b80158061320b57506000818152600a6020908152604080832060030154600f9092529091205410155b1561322957604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661325857604051636aa2a93760e01b815260040160405180910390fd5b50565b60008083600003613272575060019050600061133e565b83830283858281613285576132856140a6565b041461329857600080925092505061133e565b60019590945092505050565b600080826000036132ba5750600090508061133e565b60018385816132cb576132cb6140a6565b04915091509250929050565b6001600160a01b0384166133535760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610bae565b33600061335f8561340f565b9050600061336c8561340f565b905061337d83600089858589612e47565b6000868152600c602090815260408083206001600160a01b038b168452909152812080548792906133af908490613f5a565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612fd58360008989898961345a565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110613449576134496140de565b602090810291909101015292915050565b6001600160a01b0384163b156126e0576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906134b790899089908890889088906004016142f9565b6020604051808303816000875af19250505080156134f2575060408051601f3d908101601f191682019092526134ef91810190614218565b60015b6134fe57613082614235565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014612fd55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610bae565b8280546135c190613f72565b90600052602060002090601f0160209004810192826135e35760008555613629565b82601f106135fc57805160ff1916838001178555613629565b82800160010185558215613629579182015b8281111561362957825182559160200191906001019061360e565b50613635929150613639565b5090565b5b80821115613635576000815560010161363a565b6001600160a01b038116811461325857600080fd5b6000806040838503121561367657600080fd5b82356136818161364e565b946020939093013593505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461325857600080fd5b6000602082840312156136cf57600080fd5b81356123058161368f565b6000602082840312156136ec57600080fd5b5035919050565b60608101610bdc828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561373c578181015183820152602001613724565b8381111561374b576000848401525b50505050565b60008151808452613769816020860160208601613721565b601f01601f19169290920160200192915050565b6020815260006123056020830184613751565b803580151581146137a057600080fd5b919050565b600080604083850312156137b857600080fd5b823591506137c860208401613790565b90509250929050565b600080604083850312156137e457600080fd5b50508035926020909101359150565b60006020828403121561380557600080fd5b81356123058161364e565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561384c5761384c613810565b6040525050565b600082601f83011261386457600080fd5b813567ffffffffffffffff81111561387e5761387e613810565b6040516138956020601f19601f8501160182613826565b8181528460208386010111156138aa57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156138da57600080fd5b82359150602083013567ffffffffffffffff8111156138f857600080fd5b61390485828601613853565b9150509250929050565b602081526000825161012080602085015261392d610140850183613751565b91506020850151613961604086018260ff815116825260ff602082015116602083015260ff60408201511660408301525050565b506001600160a01b0360408601511660a0850152606085015160c0850152608085015160e085015260a085015161010085015260c0850151151581850152508091505092915050565b600067ffffffffffffffff8211156139c4576139c4613810565b5060051b60200190565b600082601f8301126139df57600080fd5b813560206139ec826139aa565b6040516139f98282613826565b83815260059390931b8501820192828101915086841115613a1957600080fd5b8286015b84811015613a345780358352918301918301613a1d565b509695505050505050565b600080600080600060a08688031215613a5757600080fd5b8535613a628161364e565b94506020860135613a728161364e565b9350604086013567ffffffffffffffff80821115613a8f57600080fd5b613a9b89838a016139ce565b94506060880135915080821115613ab157600080fd5b613abd89838a016139ce565b93506080880135915080821115613ad357600080fd5b50613ae088828901613853565b9150509295509295909350565b60008060408385031215613b0057600080fd5b823567ffffffffffffffff80821115613b1857600080fd5b818501915085601f830112613b2c57600080fd5b81356020613b39826139aa565b604051613b468282613826565b83815260059390931b8501820192828101915089841115613b6657600080fd5b948201945b83861015613b8d578535613b7e8161364e565b82529482019490820190613b6b565b96505086013592505080821115613ba357600080fd5b50613904858286016139ce565b600081518084526020808501945080840160005b83811015613be057815187529582019590820190600101613bc4565b509495945050505050565b6020815260006123056020830184613bb0565b803560ff811681146137a057600080fd5b600060608284031215613c2157600080fd5b6040516060810181811067ffffffffffffffff82111715613c4457613c44613810565b604052905080613c5383613bfe565b8152613c6160208401613bfe565b6020820152613c7260408401613bfe565b60408201525092915050565b60008060808385031215613c9157600080fd5b823591506137c88460208501613c0f565b60008060408385031215613cb557600080fd5b8235613cc08161364e565b9150602083013567ffffffffffffffff811115613cdc57600080fd5b613904858286016139ce565b6000806000806000806101008789031215613d0257600080fd5b86359550602087013567ffffffffffffffff811115613d2057600080fd5b613d2c89828a01613853565b955050613d3c8860408901613c0f565b935060a0870135613d4c8161364e565b9598949750929560c08101359460e0909101359350915050565b60008060408385031215613d7957600080fd5b8235613d848161364e565b91506137c860208401613790565b600060208284031215613da457600080fd5b813567ffffffffffffffff811115613dbb57600080fd5b613dc7848285016139ce565b949350505050565b600060208284031215613de157600080fd5b813567ffffffffffffffff811115613df857600080fd5b613dc784828501613853565b60008060408385031215613e1757600080fd5b823591506020830135613e298161364e565b809150509250929050565b6000610120808352613e488184018b613751565b915050613e78602083018960ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b0396909616608082015260a081019490945260c084019290925260e083015215156101009091015292915050565b60008060408385031215613ec057600080fd5b8235613ecb8161364e565b91506020830135613e298161364e565b600080600080600060a08688031215613ef357600080fd5b8535613efe8161364e565b94506020860135613f0e8161364e565b93506040860135925060608601359150608086013567ffffffffffffffff811115613f3857600080fd5b613ae088828901613853565b634e487b7160e01b600052601160045260246000fd5b60008219821115613f6d57613f6d613f44565b500190565b600181811c90821680613f8657607f821691505b602082108103613fa657634e487b7160e01b600052602260045260246000fd5b50919050565b60008151613fbe818560208601613721565b9290920192915050565b600080845481600182811c915080831680613fe457607f831692505b6020808410820361400357634e487b7160e01b86526022600452602486fd5b818015614017576001811461402857614055565b60ff19861689528489019650614055565b60008b81526020902060005b8681101561404d5781548b820152908501908301614034565b505084890196505b5050505050506140658185613fac565b95945050505050565b828152604060208201526000613dc76040830184613751565b60008160001904831182151516156140a1576140a1613f44565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826140d957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019820361410757614107613f44565b5060010190565b600061010088835280602084015261412881840189613751565b915050614158604083018760ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03851660a08301528360c08301528260e0830152979650505050505050565b6040815260006141916040830185613bb0565b82810360208401526140658185613bb0565b6000828210156141b5576141b5613f44565b500390565b60006001600160a01b03808816835280871660208401525060a060408301526141e660a0830186613bb0565b82810360608401526141f88186613bb0565b9050828103608084015261420c8185613751565b98975050505050505050565b60006020828403121561422a57600080fd5b81516123058161368f565b600060033d111561424e5760046000803e5060005160e01c5b90565b600060443d101561425f5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156142ad57505050505090565b82850191508151818111156142c55750505050505090565b843d87010160208285010111156142df5750505050505090565b6142ee60208286010187613826565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261433160a0830184613751565b97965050505050505056fea164736f6c634300080d000a";

type BasePlateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasePlateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasePlate__factory extends ContractFactory {
  constructor(...args: BasePlateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: PromiseOrValue<string>,
    _phiMapAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasePlate> {
    return super.deploy(
      _treasuryAddress,
      _phiMapAddress,
      overrides || {}
    ) as Promise<BasePlate>;
  }
  override getDeployTransaction(
    _treasuryAddress: PromiseOrValue<string>,
    _phiMapAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasuryAddress,
      _phiMapAddress,
      overrides || {}
    );
  }
  override attach(address: string): BasePlate {
    return super.attach(address) as BasePlate;
  }
  override connect(signer: Signer): BasePlate__factory {
    return super.connect(signer) as BasePlate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasePlateInterface {
    return new utils.Interface(_abi) as BasePlateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasePlate {
    return new Contract(address, _abi, signerOrProvider) as BasePlate;
  }
}
