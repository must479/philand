/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  WallPaper,
  WallPaperInterface,
} from "../../../contracts/object/WallPaper";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_phiMapAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "CreateWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogBuyWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "SetExp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "SetOpenForSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
    ],
    name: "SetShopAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchWallPaper",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchWallPaperFromShop",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createWallPaper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreatorAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getObjectInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "x",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "y",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "z",
                type: "uint8",
              },
            ],
            internalType: "struct BaseObject.Size",
            name: "size",
            type: "tuple",
          },
          {
            internalType: "address payable",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "forSale",
            type: "bool",
          },
        ],
        internalType: "struct BaseObject.Object",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "getObjectsPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOpenForSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoyalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "ownerCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phiMapAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
    ],
    name: "setCreatorAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "setExp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "setOpenForSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRoyalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSecondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_shopAddress",
        type: "address",
      },
    ],
    name: "setShopAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newTreasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shopAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162004381380380620043818339810160408190526200003491620002c2565b604080516020808201835260008083523381529081905291909120805460ff1916600190811790915580556200006a81620001ea565b506001600160a01b038216620000bc5760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b60448201526064015b60405180910390fd5b6001600160a01b038116620001095760405162461bcd60e51b8152602060048201526012602482015271063616e7420736574206164647265737320360741b6044820152606401620000b3565b60408051808201909152600e8082526d283434902bb0b636102830b832b960911b6020909201918252620001409160029162000203565b5060408051808201909152600780825266141a1a4b55d05360ca1b6020909201918252620001719160039162000203565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001b89160049162000203565b50600680546001600160a01b0319166001600160a01b039384161790551660805260006007556101f46008556200033d565b8051620001ff90600e90602084019062000203565b5050565b828054620002119062000301565b90600052602060002090601f01602090048101928262000235576000855562000280565b82601f106200025057805160ff191683800117855562000280565b8280016001018555821562000280579182015b828111156200028057825182559160200191906001019062000263565b506200028e92915062000292565b5090565b5b808211156200028e576000815560010162000293565b6001600160a01b0381168114620002bf57600080fd5b50565b60008060408385031215620002d657600080fd5b8251620002e381620002a9565b6020840151909250620002f681620002a9565b809150509250929050565b600181811c908216806200031657607f821691505b6020821081036200033757634e487b7160e01b600052602260045260246000fd5b50919050565b6080516140216200036060003960008181610682015261211f01526140216000f3fe60806040526004361061034d5760003560e01c8063604c7f80116101bb578063a30b4db9116100f7578063cbdac71011610095578063e498922f1161006f578063e498922f14610a62578063e985e9c514610a92578063ea2fe3cb14610ab2578063f242432a14610ac757600080fd5b8063cbdac710146109fe578063e002460414610a31578063e0e0bb3b14610a4f57600080fd5b8063bd85b039116100d1578063bd85b03914610961578063bfdc4fdf1461098e578063c457fb37146109ae578063c5f956af146109de57600080fd5b8063a30b4db9146108e8578063a6a41a2914610921578063b6ed6da91461094157600080fd5b80637b92e5491161016457806395d89b411161013e57806395d89b41146108635780639733faa51461087857806398f24682146108a8578063a22cb465146108c857600080fd5b80637b92e5491461080a57806382cb6b721461081d5780639291671a1461084d57600080fd5b80636605bfda116101955780636605bfda146107aa57806367478a35146107ca5780637061d486146107ea57600080fd5b8063604c7f801461075557806362e8e8ac14610775578063653f08841461079557600080fd5b80631e4c78871161028a578063326bb4ad116102335780633ec963cb1161020d5780633ec963cb146106c45780634e1273f4146106e45780634f558e79146107115780635b2bd79e1461074057600080fd5b8063326bb4ad1461065a57806339b67b6d146106705780633bb3a24d146106a457600080fd5b80632a55205a116102645780632a55205a146105c85780632c383ee8146106075780632eb2c2d61461063a57600080fd5b80631e4c78871461054157806322446fb81461055757806323bf2f671461058f57600080fd5b80630d09308e116102f7578063162094c4116102d1578063162094c4146104b4578063162d6cab146104d4578063173825d9146104f45780631d1b29e01461051457600080fd5b80630d09308e146104545780630e89341c1461047457806313af40351461049457600080fd5b806306fdde031161032857806306fdde03146103f25780630a1eeb0c146104145780630b68e7961461043457600080fd5b8062fdd58e1461036257806301ffc9a714610395578063023c23db146103c557600080fd5b3661035d5761035b34610ae7565b005b600080fd5b34801561036e57600080fd5b5061038261037d366004613372565b610b34565b6040519081526020015b60405180910390f35b3480156103a157600080fd5b506103b56103b03660046133b4565b610be2565b604051901515815260200161038c565b3480156103d157600080fd5b506103e56103e03660046133d1565b610c32565b60405161038c91906133ea565b3480156103fe57600080fd5b50610407610cee565b60405161038c9190613474565b34801561042057600080fd5b5061035b61042f36600461349c565b610d7c565b34801561044057600080fd5b5061035b61044f3660046134c8565b610e09565b34801561046057600080fd5b5061035b61046f3660046134c8565b610e84565b34801561048057600080fd5b5061040761048f3660046133d1565b610eff565b3480156104a057600080fd5b5061035b6104af3660046134ea565b610f63565b3480156104c057600080fd5b5061035b6104cf3660046135be565b610fe0565b3480156104e057600080fd5b5061035b6104ef366004613685565b611061565b34801561050057600080fd5b5061035b61050f3660046134ea565b61115e565b34801561052057600080fd5b5061053461052f3660046133d1565b6111d8565b60405161038c9190613703565b34801561054d57600080fd5b5061038260095481565b34801561056357600080fd5b50600554610577906001600160a01b031681565b6040516001600160a01b03909116815260200161038c565b34801561059b57600080fd5b506103b56105aa3660046134ea565b6001600160a01b031660009081526020819052604090205460ff1690565b3480156105d457600080fd5b506105e86105e33660046134c8565b61136b565b604080516001600160a01b03909316835260208301919091520161038c565b34801561061357600080fd5b506103b56106223660046133d1565b6000908152600a602052604090206006015460ff1690565b34801561064657600080fd5b5061035b610655366004613834565b611396565b34801561066657600080fd5b5061038260075481565b34801561067c57600080fd5b506105777f000000000000000000000000000000000000000000000000000000000000000081565b3480156106b057600080fd5b506104076106bf3660046133d1565b61142a565b3480156106d057600080fd5b5061035b6106df3660046134ea565b6114cc565b3480156106f057600080fd5b506107046106ff3660046138e2565b61155e565b60405161038c91906139e0565b34801561071d57600080fd5b506103b561072c3660046133d1565b6000908152600f6020526040902054151590565b34801561074c57600080fd5b5061040761169c565b34801561076157600080fd5b5061035b6107703660046139f3565b6116a9565b34801561078157600080fd5b5061035b6107903660046134c8565b61176b565b3480156107a157600080fd5b50600754610382565b3480156107b657600080fd5b5061035b6107c53660046134ea565b6117e6565b3480156107d657600080fd5b5061035b6107e53660046134ea565b6118bd565b3480156107f657600080fd5b5061035b6108053660046133d1565b611a6b565b61035b610818366004613a17565b611ad0565b34801561082957600080fd5b506103b56108383660046133d1565b600b6020526000908152604090205460ff1681565b34801561085957600080fd5b5061038260085481565b34801561086f57600080fd5b50610407611c31565b34801561088457600080fd5b506103826108933660046133d1565b6000908152600a602052604090206003015490565b3480156108b457600080fd5b5061035b6108c33660046133d1565b611c3e565b3480156108d457600080fd5b5061035b6108e3366004613a54565b611ca3565b3480156108f457600080fd5b506105776109033660046133d1565b6000908152600a60205260409020600201546001600160a01b031690565b34801561092d57600080fd5b5061038261093c366004613a17565b611cb2565b34801561094d57600080fd5b5061035b61095c366004613a80565b611d19565b34801561096d57600080fd5b5061038261097c3660046133d1565b6000908152600f602052604090205490565b34801561099a57600080fd5b5061035b6109a9366004613ab5565b611d8c565b3480156109ba57600080fd5b506103826109c93660046133d1565b6000908152600a602052604090206004015490565b3480156109ea57600080fd5b50600654610577906001600160a01b031681565b348015610a0a57600080fd5b50610a1e610a193660046133d1565b611e77565b60405161038c9796959493929190613ae5565b348015610a3d57600080fd5b506006546001600160a01b0316610577565b61035b610a5d366004613b5e565b611f75565b348015610a6e57600080fd5b50610382610a7d3660046133d1565b6000908152600a602052604090206005015490565b348015610a9e57600080fd5b506103b5610aad366004613ba4565b61211b565b348015610abe57600080fd5b5061040761218f565b348015610ad357600080fd5b5061035b610ae2366004613bd2565b612221565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a18060096000828254610b2c9190613c51565b909155505050565b60006001600160a01b038316610bb75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152600c602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b1480610c1357506001600160e01b031982166303a24d0760e21b145b80610bdc57506301ffc9a760e01b6001600160e01b0319831614610bdc565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604090206001015460ff161580610c8757506000828152600a6020526040902060010154610100900460ff16155b15610ca55760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60028054610cfb90613c69565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2790613c69565b8015610d745780601f10610d4957610100808354040283529160200191610d74565b820191906000526020600020905b815481529060010190602001808311610d5757829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610dac576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020600601805460ff19168415159081179091558251858152918201527fd24cd22e1990320c8f339b920aee0413e3ac1cfdfb6200d6d967befa1fa1573c91015b60405180910390a15050565b3360009081526020819052604090205460ff16610e39576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060050183905581518481529081018390527f1e1ef21dc18e8f45f4e05a47d70fbffe8371dbcc8b4815e8dbca1dbd620c43669101610dfd565b3360009081526020819052604090205460ff16610eb4576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a9101610dfd565b6000818152600b602052604090205460609060ff16610f3157604051636aa2a93760e01b815260040160405180910390fd5b6004610f3c8361142a565b604051602001610f4d929190613cbf565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610f93576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16611010576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a60209081526040909120825161102f928401906132c4565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610dfd929190613d65565b3360009081526020819052604090205460ff16611091576040516349e27cff60e01b815260040160405180910390fd5b6000868152600f6020526040902054156110be576040516387cf36d160e01b815260040160405180910390fd5b6110c88686610fe0565b6110d286856116a9565b6110dc8684611d8c565b6110e68683610e84565b6110f0868261176b565b6110fb866001610d7c565b6000868152600b602052604090819020805460ff19166001179055517f31f6039824f388e11e1263c1c0517cc34345ba83cd17b29c533bcc39d60d31b09061114e90889088908890889088908890613d7e565b60405180910390a1505050505050565b3360009081526020819052604090205460ff1661118e576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b61123b6040805160e08101825260608082528251908101835260008082526020828101829052938201529091820190815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b6000828152600a602052604090819020815160e0810190925280548290829061126390613c69565b80601f016020809104026020016040519081016040528092919081815260200182805461128f90613c69565b80156112dc5780601f106112b1576101008083540402835291602001916112dc565b820191906000526020600020905b8154815290600101906020018083116112bf57829003601f168201915b50505091835250506040805160608082018352600185015460ff808216845261010082048116602085810191909152620100009092048116848601529085019290925260028501546001600160a01b03169284019290925260038401549183019190915260048301546080830152600583015460a0830152600690920154909116151560c09091015292915050565b60008030612710600854856113809190613dee565b61138a9190613e23565b915091505b9250929050565b6001600160a01b0385163314806113b257506113b2853361211b565b6114165760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526e195c881b9bdc88185c1c1c9bdd9959608a1b6064820152608401610bae565b61142385858585856122ae565b5050505050565b6000818152600a6020526040902080546060919061144790613c69565b80601f016020809104026020016040519081016040528092919081815260200182805461147390613c69565b80156114c05780601f10611495576101008083540402835291602001916114c0565b820191906000526020600020905b8154815290600101906020018083116114a357829003601f168201915b50505050509050919050565b3360009081526020819052604090205460ff166114fc576040516349e27cff60e01b815260040160405180910390fd5b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fcefd22c602a88b1f72d74d02bad4b2cb1e05e85530bb77114da7c723d2aca9db906020015b60405180910390a150565b606081518351146115d75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610bae565b6000835167ffffffffffffffff8111156115f3576115f3613507565b60405190808252806020026020018201604052801561161c578160200160208202803683370190505b50905060005b84518110156116945761166785828151811061164057611640613e45565b602002602001015185838151811061165a5761165a613e45565b6020026020010151610b34565b82828151811061167957611679613e45565b602090810291909101015261168d81613e5b565b9050611622565b509392505050565b60048054610cfb90613c69565b3360009081526020819052604090205460ff166116d9576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020835160019091018054858401518686015160ff94851661ffff1990931683176101009286169283021762ff000019166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610dfd565b3360009081526020819052604090205460ff1661179b576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610dfd565b3360009081526020819052604090205460ff16611816576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b0381166118625760405162461bcd60e51b815260206004820152601360248201527263616e7420736574206164647265737328302960681b6044820152606401610bae565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c6090602001611553565b3360009081526020819052604090205460ff166118ed576040516349e27cff60e01b815260040160405180910390fd5b60026001540361193f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bae565b60026001556001600160a01b0381166119905760405162461bcd60e51b815260206004820152601360248201527263616e7420736574206164647265737328302960681b6044820152606401610bae565b6009546000036119b357604051632f31015b60e11b815260040160405180910390fd5b600980546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d8060008114611a08576040519150601f19603f3d011682016040523d82523d6000602084013e611a0d565b606091505b5050905080611a2f57604051632f31015b60e11b815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a150506001805550565b3360009081526020819052604090205460ff16611a9b576040516349e27cff60e01b815260040160405180910390fd5b60088190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf90602001611553565b600260015403611b225760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bae565b6002600155600033611b3357600080fd5b333214611b825760405162461bcd60e51b815260206004820152601260248201527f6d73672073656e64657220696e76616c696400000000000000000000000000006044820152606401610bae565b815160005b81811015611bdc57600a6000858381518110611ba557611ba5613e45565b602002602001015181526020019081526020016000206004015483611bca9190613c51565b9250611bd581613e5b565b9050611b87565b5081341015611bea57600080fd5b60005b81811015611c2757611c17848281518110611c0a57611c0a613e45565b6020026020010151612532565b611c2081613e5b565b9050611bed565b5050600180555050565b60038054610cfb90613c69565b3360009081526020819052604090205460ff16611c6e576040516349e27cff60e01b815260040160405180910390fd5b60078190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e190602001611553565b611cae338383612732565b5050565b80516000908190815b81811015611d1057600a6000868381518110611cd957611cd9613e45565b602002602001015181526020019081526020016000206004015483611cfe9190613c51565b9250611d0981613e5b565b9050611cbb565b50909392505050565b3360009081526020819052604090205460ff16611d49576040516349e27cff60e01b815260040160405180910390fd5b8051611d5c9060049060208401906132c4565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516115539190613474565b3360009081526020819052604090205460ff16611dbc576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116611e085760405162461bcd60e51b815260206004820152601360248201527263616e7420736574206164647265737328302960681b6044820152606401610bae565b6000828152600a6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610dfd565b600a60205260009081526040902080548190611e9290613c69565b80601f0160208091040260200160405190810160405280929190818152602001828054611ebe90613c69565b8015611f0b5780601f10611ee057610100808354040283529160200191611f0b565b820191906000526020600020905b815481529060010190602001808311611eee57829003601f168201915b505060408051606081018252600187015460ff80821683526101008204811660208401526201000090910481169282019290925260028701546003880154600489015460058a01546006909a0154989993986001600160a01b039093169750909550935090911687565b600260015403611fc75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bae565b60026001556005546001600160a01b031633146120265760405162461bcd60e51b815260206004820152601260248201527f6d73672073656e64657220696e76616c696400000000000000000000000000006044820152606401610bae565b80516000805b8281101561208157600a600085838151811061204a5761204a613e45565b60200260200101518152602001908152602001600020600401548261206f9190613c51565b915061207a81613e5b565b905061202c565b50803410156120d25760405162461bcd60e51b815260206004820152601060248201527f6e6f7420656e6f7567682076616c7565000000000000000000000000000000006044820152606401610bae565b60005b8281101561211057612100858583815181106120f3576120f3613e45565b6020026020010151612826565b61210981613e5b565b90506120d5565b505060018055505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03160361215e57506001610bdc565b6001600160a01b038084166000908152600d602090815260408083209386168352929052205460ff165b9392505050565b60606004805461219e90613c69565b80601f01602080910402602001604051908101604052809291908181526020018280546121ca90613c69565b80156122175780601f106121ec57610100808354040283529160200191612217565b820191906000526020600020905b8154815290600101906020018083116121fa57829003601f168201915b5050505050905090565b6001600160a01b03851633148061223d575061223d853361211b565b6122a15760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526e195c881b9bdc88185c1c1c9bdd9959608a1b6064820152608401610bae565b6114238585858585612a73565b81518351146123255760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610bae565b6001600160a01b0384166123895760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610bae565b33612398818787878787612c30565b60005b84518110156124c45760008582815181106123b8576123b8613e45565b6020026020010151905060008583815181106123d6576123d6613e45565b6020908102919091018101516000848152600c835260408082206001600160a01b038e16835290935291909120549091508181101561246a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610bae565b6000838152600c602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906124a9908490613c51565b92505081905550505050806124bd90613e5b565b905061239b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612514929190613e74565b60405180910390a461252a818787878787612dc7565b505050505050565b61253b81612f6c565b6000818152600a602052604090206006015460ff1661255957600080fd5b6000818152600a6020908152604080832060030154600f90925290912054111561258257600080fd5b6000818152600a602052604081206004015460075482916125a291612fe5565b91509150816125b057600080fd5b6000806125bf8361271061302e565b91509150816125cd57600080fd5b6000858152600a60205260408082206002015490516001600160a01b039091169083908381818185875af1925050503d8060008114612628576040519150601f19603f3d011682016040523d82523d6000602084013e61262d565b606091505b505090508061263b57600080fd5b6006546000878152600a602052604081206004015490916001600160a01b031690612667908590613e99565b604051600081818185875af1925050503d80600081146126a3576040519150601f19603f3d011682016040523d82523d6000602084013e6126a8565b606091505b50509050806126b657600080fd5b6126dd3388600160405180604001604052806002815260200161060f60f31b815250613061565b6000878152600a60209081526040918290206004015482518a81529182015233917f1a37ab73fd88dcf4af7f9a8c40ffd42e9a5fedbd8dbeb054a85ebde1c189820d910160405180910390a250505050505050565b816001600160a01b0316836001600160a01b0316036127b95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610bae565b6001600160a01b038381166000818152600d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61282f81612f6c565b6000818152600a602052604090206006015460ff166128905760405162461bcd60e51b815260206004820152601160248201527f6e6f74206f70656e20666f722073616c650000000000000000000000000000006044820152606401610bae565b6000818152600a6020908152604080832060030154600f9092529091205411156128b957600080fd5b6000818152600a602052604081206004015460075482916128d991612fe5565b91509150816128e757600080fd5b6000806128f68361271061302e565b915091508161290457600080fd5b6000858152600a60205260408082206002015490516001600160a01b039091169083908381818185875af1925050503d806000811461295f576040519150601f19603f3d011682016040523d82523d6000602084013e612964565b606091505b505090508061297257600080fd5b6006546000878152600a602052604081206004015490916001600160a01b03169061299e908590613e99565b604051600081818185875af1925050503d80600081146129da576040519150601f19603f3d011682016040523d82523d6000602084013e6129df565b606091505b50509050806129ed57600080fd5b612a148888600160405180604001604052806002815260200161060f60f31b815250613061565b6000878152600a60209081526040918290206004015482518a8152918201526001600160a01b038a16917f1a37ab73fd88dcf4af7f9a8c40ffd42e9a5fedbd8dbeb054a85ebde1c189820d910160405180910390a25050505050505050565b6001600160a01b038416612ad75760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610bae565b336000612ae38561317d565b90506000612af08561317d565b9050612b00838989858589612c30565b6000868152600c602090815260408083206001600160a01b038c16845290915290205485811015612b865760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610bae565b6000878152600c602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290612bc5908490613c51565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612c25848a8a8a8a8a6131c8565b505050505050505050565b6001600160a01b038516612cb75760005b8351811015612cb557828181518110612c5c57612c5c613e45565b6020026020010151600f6000868481518110612c7a57612c7a613e45565b602002602001015181526020019081526020016000206000828254612c9f9190613c51565b90915550612cae905081613e5b565b9050612c41565b505b6001600160a01b03841661252a5760005b8351811015612dbe576000848281518110612ce557612ce5613e45565b602002602001015190506000848381518110612d0357612d03613e45565b602002602001015190506000600f600084815260200190815260200160002054905081811015612d9b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610bae565b6000928352600f602052604090922091039055612db781613e5b565b9050612cc8565b50505050505050565b6001600160a01b0384163b1561252a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190612e0b9089908990889088908890600401613eb0565b6020604051808303816000875af1925050508015612e46575060408051601f3d908101601f19168201909252612e4391810190613f0e565b60015b612efb57612e52613f2b565b806308c379a003612e8b5750612e66613f47565b80612e715750612e8d565b8060405162461bcd60e51b8152600401610bae9190613474565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610bae565b6001600160e01b0319811663bc197c8160e01b14612dbe5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610bae565b801580612f9557506000818152600a6020908152604080832060030154600f9092529091205410155b15612fb357604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff16612fe257604051636aa2a93760e01b815260040160405180910390fd5b50565b60008083600003612ffc575060019050600061138f565b8383028385828161300f5761300f613e0d565b041461302257600080925092505061138f565b60019590945092505050565b600080826000036130445750600090508061138f565b600183858161305557613055613e0d565b04915091509250929050565b6001600160a01b0384166130c15760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610bae565b3360006130cd8561317d565b905060006130da8561317d565b90506130eb83600089858589612c30565b6000868152600c602090815260408083206001600160a01b038b1684529091528120805487929061311d908490613c51565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612dbe836000898989896131c8565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106131b7576131b7613e45565b602090810291909101015292915050565b6001600160a01b0384163b1561252a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061320c9089908990889088908890600401613fd1565b6020604051808303816000875af1925050508015613247575060408051601f3d908101601f1916820190925261324491810190613f0e565b60015b61325357612e52613f2b565b6001600160e01b0319811663f23a6e6160e01b14612dbe5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610bae565b8280546132d090613c69565b90600052602060002090601f0160209004810192826132f25760008555613338565b82601f1061330b57805160ff1916838001178555613338565b82800160010185558215613338579182015b8281111561333857825182559160200191906001019061331d565b50613344929150613348565b5090565b5b808211156133445760008155600101613349565b6001600160a01b0381168114612fe257600080fd5b6000806040838503121561338557600080fd5b82356133908161335d565b946020939093013593505050565b6001600160e01b031981168114612fe257600080fd5b6000602082840312156133c657600080fd5b81356121888161339e565b6000602082840312156133e357600080fd5b5035919050565b60608101610bdc828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561343357818101518382015260200161341b565b83811115613442576000848401525b50505050565b60008151808452613460816020860160208601613418565b601f01601f19169290920160200192915050565b6020815260006121886020830184613448565b8035801515811461349757600080fd5b919050565b600080604083850312156134af57600080fd5b823591506134bf60208401613487565b90509250929050565b600080604083850312156134db57600080fd5b50508035926020909101359150565b6000602082840312156134fc57600080fd5b81356121888161335d565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561354357613543613507565b6040525050565b600082601f83011261355b57600080fd5b813567ffffffffffffffff81111561357557613575613507565b60405161358c601f8301601f19166020018261351d565b8181528460208386010111156135a157600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156135d157600080fd5b82359150602083013567ffffffffffffffff8111156135ef57600080fd5b6135fb8582860161354a565b9150509250929050565b803560ff8116811461349757600080fd5b60006060828403121561362857600080fd5b6040516060810181811067ffffffffffffffff8211171561364b5761364b613507565b60405290508061365a83613605565b815261366860208401613605565b602082015261367960408401613605565b60408201525092915050565b600080600080600080610100878903121561369f57600080fd5b86359550602087013567ffffffffffffffff8111156136bd57600080fd5b6136c989828a0161354a565b9550506136d98860408901613616565b935060a08701356136e98161335d565b9598949750929560c08101359460e0909101359350915050565b6020815260008251610120806020850152613722610140850183613448565b91506020850151613756604086018260ff815116825260ff602082015116602083015260ff60408201511660408301525050565b506001600160a01b0360408601511660a0850152606085015160c0850152608085015160e085015260a085015161010085015260c0850151151581850152508091505092915050565b600067ffffffffffffffff8211156137b9576137b9613507565b5060051b60200190565b600082601f8301126137d457600080fd5b813560206137e18261379f565b6040516137ee828261351d565b83815260059390931b850182019282810191508684111561380e57600080fd5b8286015b848110156138295780358352918301918301613812565b509695505050505050565b600080600080600060a0868803121561384c57600080fd5b85356138578161335d565b945060208601356138678161335d565b9350604086013567ffffffffffffffff8082111561388457600080fd5b61389089838a016137c3565b945060608801359150808211156138a657600080fd5b6138b289838a016137c3565b935060808801359150808211156138c857600080fd5b506138d58882890161354a565b9150509295509295909350565b600080604083850312156138f557600080fd5b823567ffffffffffffffff8082111561390d57600080fd5b818501915085601f83011261392157600080fd5b8135602061392e8261379f565b60405161393b828261351d565b83815260059390931b850182019282810191508984111561395b57600080fd5b948201945b838610156139825785356139738161335d565b82529482019490820190613960565b9650508601359250508082111561399857600080fd5b506135fb858286016137c3565b600081518084526020808501945080840160005b838110156139d5578151875295820195908201906001016139b9565b509495945050505050565b60208152600061218860208301846139a5565b60008060808385031215613a0657600080fd5b823591506134bf8460208501613616565b600060208284031215613a2957600080fd5b813567ffffffffffffffff811115613a4057600080fd5b613a4c848285016137c3565b949350505050565b60008060408385031215613a6757600080fd5b8235613a728161335d565b91506134bf60208401613487565b600060208284031215613a9257600080fd5b813567ffffffffffffffff811115613aa957600080fd5b613a4c8482850161354a565b60008060408385031215613ac857600080fd5b823591506020830135613ada8161335d565b809150509250929050565b6000610120808352613af98184018b613448565b915050613b29602083018960ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b0396909616608082015260a081019490945260c084019290925260e083015215156101009091015292915050565b60008060408385031215613b7157600080fd5b8235613b7c8161335d565b9150602083013567ffffffffffffffff811115613b9857600080fd5b6135fb858286016137c3565b60008060408385031215613bb757600080fd5b8235613bc28161335d565b91506020830135613ada8161335d565b600080600080600060a08688031215613bea57600080fd5b8535613bf58161335d565b94506020860135613c058161335d565b93506040860135925060608601359150608086013567ffffffffffffffff811115613c2f57600080fd5b6138d58882890161354a565b634e487b7160e01b600052601160045260246000fd5b60008219821115613c6457613c64613c3b565b500190565b600181811c90821680613c7d57607f821691505b602082108103613c9d57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151613cb5818560208601613418565b9290920192915050565b600080845481600182811c915080831680613cdb57607f831692505b60208084108203613cfa57634e487b7160e01b86526022600452602486fd5b818015613d0e5760018114613d1f57613d4c565b60ff19861689528489019650613d4c565b60008b81526020902060005b86811015613d445781548b820152908501908301613d2b565b505084890196505b505050505050613d5c8185613ca3565b95945050505050565b828152604060208201526000613a4c6040830184613448565b6000610100888352806020840152613d9881840189613448565b915050613dc8604083018760ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03851660a08301528360c08301528260e0830152979650505050505050565b6000816000190483118215151615613e0857613e08613c3b565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613e4057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201613e6d57613e6d613c3b565b5060010190565b604081526000613e8760408301856139a5565b8281036020840152613d5c81856139a5565b600082821015613eab57613eab613c3b565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152613edc60a08301866139a5565b8281036060840152613eee81866139a5565b90508281036080840152613f028185613448565b98975050505050505050565b600060208284031215613f2057600080fd5b81516121888161339e565b600060033d1115613f445760046000803e5060005160e01c5b90565b600060443d1015613f555790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715613f8557505050505090565b8285019150815181811115613f9d5750505050505090565b843d8701016020828501011115613fb75750505050505090565b613fc66020828601018761351d565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261400960a0830184613448565b97965050505050505056fea164736f6c634300080d000a";

type WallPaperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WallPaperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WallPaper__factory extends ContractFactory {
  constructor(...args: WallPaperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: PromiseOrValue<string>,
    _phiMapAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WallPaper> {
    return super.deploy(
      _treasuryAddress,
      _phiMapAddress,
      overrides || {}
    ) as Promise<WallPaper>;
  }
  override getDeployTransaction(
    _treasuryAddress: PromiseOrValue<string>,
    _phiMapAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasuryAddress,
      _phiMapAddress,
      overrides || {}
    );
  }
  override attach(address: string): WallPaper {
    return super.attach(address) as WallPaper;
  }
  override connect(signer: Signer): WallPaper__factory {
    return super.connect(signer) as WallPaper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WallPaperInterface {
    return new utils.Interface(_abi) as WallPaperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WallPaper {
    return new Contract(address, _abi, signerOrProvider) as WallPaper;
  }
}
